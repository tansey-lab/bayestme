params {
    // Global flags
    n_components = null
    spatial_smoothing_parameter = null
    outdir = null
    seed = null
    // Whether to use MCMC (slower) or SVI (faster) inference
    inference_type = "MCMC"

    // Input directory with spaceranger data
    spaceranger_dir = null
    input_adata = null
    expression_truth_files = []

    // Gene filtering params
    filter_ribosomal_genes = false
    n_top_by_standard_deviation = 1000
    spot_threshold = 0.9

    // Bleeding correction params
    bleed_correction_n_top_genes = 50
    bleed_correction_n_em_steps = 5
    bleed_correction_local_weight = null

    // Flags for both phenotype selection and deconvolution
    background_noise = false
    lda_initialization = false

    // Phenotype selection params

    // Number of times to run k-fold cross-validation.
    phenotype_selection_n_fold = 5
    // Split dataset into k consecutive folds for each instance of k-fold cross-validation
    phenotype_selection_n_splits = 15
    // Number of samples from the posterior distribution.
    phenotype_selection_n_samples = 100
    // Number of burn-in samples.
    phenotype_selection_n_burn = 2000
    // Thinning factor for sampling
    phenotype_selection_n_thin = 5
    // If using SVI inference, whether to use spatial guide or not
    phenotype_selection_use_spatial_guide = true
    // Minimum number of cell types to try.
    phenotype_selection_n_components_min = 2
    // Maximum number of cell types to try.
    phenotype_selection_n_components_max = 12
    // Potential values of the spatial smoothing parameter to try.
    // phenotype_selection_spatial_smoothing_values = [1, 1e1, 1e2, 1e3, 1e4, 1e5]
    phenotype_selection_spatial_smoothing_values = [1e2, 1e3]

    // Deconvolution params

    // Number of samples from the posterior distribution.
    deconvolution_n_samples = 100
    // Number of burn-in samples.
    deconvolution_n_burn = 2000
    // Thinning factor for sampling
    deconvolution_n_thin = 5
    // List of cell type names to use for plots.
    deconvolution_cell_type_names = []
    // If using SVI inference, whether to use spatial guide or not
    deconvolution_use_spatial_guide = true

    // Select Marker Genes Params
    n_marker_genes = 5
    marker_gene_alpha_cutoff = 0.05
    // Method for choosing marker genes. Options are: "TIGHT" or "FALSE_DISCOVERY_RATE"
    marker_gene_method = "TIGHT"

    // Spatial Expression Params

    spatial_expression_n_spatial_patterns = 5
    // Number of samples from the posterior distribution.
    spatial_expression_n_samples = 100
    // Number of burn-in samples.
    spatial_expression_n_burn = 2000
    // Thinning factor for sampling
    spatial_expression_n_thin = 5
    // Simpler model for sampling spatial differential expression posterior
    use_simple_spatial_expression_model = false
    // Alpha0 tuning parameter.
    spatial_expression_alpha0 = 10
    // Prior var tuning parameter.
    spatial_expression_prior_var = 100
    // Only consider spots where there are at least <n_cell_min> cells of a given type,
    // as determined by the deconvolution results.
    spatial_expression_n_cell_min = 5
    // Number of genes to consider for spatial expression.
    spatial_expression_n_genes = 100

    // Parameters controlling the selection of significant spatial patterns
    significant_spatial_pattern_moran_i_score_threshold = 0.9
    significant_spatial_pattern_tissue_threshold = 5
    significant_spatial_pattern_gene_spatial_pattern_proportion_threshold = 0.95
}

profiles {
    juno {
        singularity {
            enabled = true
            autoMounts = true
        }
        process {
            executor = 'lsf'
            container = 'docker://jeffquinnmsk/bayestme:latest'
            withLabel: big_mem {
                cpus = 1
                memory = '96 GB'
                time = '96h'
            }
            withLabel: small_mem {
                cpus = 1
                memory = '32 GB'
                time = '1h'
            }
        }
        executor {
            name = 'lsf'
            perJobMemLimit = true
            queueSize = 25
        }

    }

    local {
        process.executor = 'local'
    }
}
